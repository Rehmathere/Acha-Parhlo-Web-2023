---------- Z_Test_Parent.js -----------

import React from 'react';
import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';
import Z_Test from './Z_Test';
import Z_Test_2 from './Z_Test_2';
import Z_Test_C from './Z_Test_C';

export default function Z_Test_Parent() {
    // Main Body
    return (
        <Router>
            <Routes>
                {/* 1 Home Page */}
                <Route path='/' element={<Z_Test />} />
                {/* 2 Update Page */}
                <Route path='/Z_Test_2/:id' element={<Z_Test_2 />} />
                {/* 3 Create Page */}
                <Route path='/Z_Test_C' element={<Z_Test_C />} />
            </Routes>
        </Router>
    );
}

----------- Z_Test.js -----------

import React, { useEffect, useState } from 'react';
// Navigation
import { useNavigate } from 'react-router-dom';
// CSS
import "../Portal/MyFeatures/PChat/FinalChat.css";
// Firebase
import { database1 } from '../Portal/firebase';
import { collection, getDocs, deleteDoc, doc } from 'firebase/firestore';

export default function Z_Test() {
  // Navigate
  const navigate = useNavigate();
  // ------------- Backend Part Logic -------------
  const [val, setVal] = useState([]);
  const value = collection(database1, "3 - Appointment");
  // Function
  const getData = async () => {
    const dbVal = await getDocs(value);
    setVal(dbVal.docs.map(doc => ({ ...doc.data(), id: doc.id })));
  }
  useEffect(() => {
    getData();
  }, []);
  // View
  const handleEdit = (id) => {
    navigate(`/Z_Test_2/${id}`);
  }
  // Delete logic
  const handleDelete = async (id) => {
    await deleteDoc(doc(database1, "3 - Appointment", id));
    getData(); // Refresh data after delete
  }
  // ------------- Backend Part Logic -------------
  // Main Body
  return (
    <>
      {/* Heading */}
      <div id="Z_Create">
        <div id="Z_Create_Part_1">
          <h4>Appointment App Feature</h4>
        </div>
      </div>
      {/* Box */}
      <div className='container'>
        {val.map(values =>
          <div id='Z_T_1_Box' key={values.id}>
            <h4>1 - {values.value_1}</h4>
            <h4>2 - {values.value_2}</h4>
            <h4>3 - {values.value_3}</h4>
            <h4>4 - {values.TimeSlot}</h4>
            <h4>5 - {values.gender}</h4>
            <h4>6 - {values.Date}</h4>
            <button onClick={() => handleEdit(values.id)}>Appointment Detail</button>
            {/* Delete Btn */}
            <button onClick={() => handleDelete(values.id)}>Delete</button>
          </div>
        )}
      </div>
    </>
  );
}

----------- Z_Test_2.js -----------

import React, { useState, useEffect } from 'react';
import "../Portal/MyFeatures/PChat/FinalChat.css";
// Firebase
import { doc, getDoc, updateDoc } from 'firebase/firestore';
import { database1 } from '../Portal/firebase';
// Navigate
import { useNavigate, useParams } from "react-router-dom"

export default function Z_Test_2() {
  // Navigate
  const navigate = useNavigate();
  // ------------- Backend Part Logic -------------
  const { id } = useParams();
  const [value_1, setValue_1] = useState("");
  const [value_2, setValue_2] = useState("");
  const [value_3, setValue_3] = useState("");
  const [TimeSlot, setTimeSlot] = useState("");
  const [gender, setGender] = useState("");
  const [Date, setDate] = useState("");
  const [status, setStatus] = useState("Processing"); // Default status
  // Function
  useEffect(() => {
    const fetchData = async () => {
      const docRef = doc(database1, "3 - Appointment", id);
      const docSnap = await getDoc(docRef);
      if (docSnap.exists()) {
        const data = docSnap.data();
        setValue_1(data.value_1 || "");
        setValue_2(data.value_2 || "");
        setValue_3(data.value_3 || "");
        setTimeSlot(data.Date || "");
        setGender(data.gender || "");
        setDate(data.TimeSlot || "");
        // Check if status exists, otherwise set default
        setStatus(data.status || "Processing");
      }
    };
    fetchData();
  }, [id]);
  // Status Logic
  const handleStatusUpdate = async (status) => {
    const updateData = doc(database1, "3 - Appointment", id);
    await updateDoc(updateData, { status });
    setStatus(status); // Update status locally
  }
  // Define the status color based on its value
  const getStatusColor = () => {
    switch (status) {
      case "Accepted":
        return "green";
      case "Rejected":
        return "red";
      case "Delayed":
        return "blue";
      default:
        return "black";
    }
  };
  // ------------- Backend Part Logic -------------
  // Main Body
  return (
    <>
      <div className='container'>
        <div id="Z_T_C_Box">
          {/* Heading */}
          <h1>Appointment Detail</h1>
          {/* Detail */}
          <h6>1 - Name</h6>
          <h5>{value_1}</h5>
          <h6>2 - Email</h6>
          <h5>{value_2}</h5>
          <h6>3 - Phone Number</h6>
          <h5>{value_3}</h5>
          <h6>4 - Time Slot</h6>
          <h5>{TimeSlot}</h5>
          <h6>5 - Gender</h6>
          <h5>{gender}</h5>
          <h6>6 - Date</h6>
          <h5>{Date}</h5>
          {/* Status with color-coded styling */}
          <h6>Status</h6>
          <h5 style={{ color: getStatusColor() }}>{status}</h5>
          {/* Status Div */}
          <div id="Status_Parent">
            {/* Button 1 */}
            <button id='A_Btn_1' onClick={() => handleStatusUpdate('Accepted')}>Accept</button>
            {/* Button 2 */}
            <button id='A_Btn_2' onClick={() => handleStatusUpdate('Rejected')}>Reject</button>
            {/* Button 3 */}
            <button id='A_Btn_3' onClick={() => handleStatusUpdate('Delayed')}>Delay</button>
          </div>
          {/* Back Button */}
          <button id='Btn_C_1' onClick={() => navigate('/')}>Move Back</button>
        </div>
      </div>
    </>
  );
}

------------------------------------------------------------------


